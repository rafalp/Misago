# Generated by Django 4.2.10 on 2025-08-09 16:06

from django.db import migrations


def migrate_private_thread_members(apps, _):
    PrivateThreadMember = apps.get_model("misago_privatethreads", "PrivateThreadMember")
    ThreadParticipant = apps.get_model("misago_threads", "ThreadParticipant")

    queryset = ThreadParticipant.objects.order_by("id").values(
        "user_id", "is_owner", "thread_id", "thread__started_on"
    )

    batch: list[PrivateThreadMember] = []
    batch_size: int = 0
    for data in queryset.iterator(chunk_size=50):
        data["created_at"] = data.pop("thread__started_on")
        batch.append(PrivateThreadMember(**data))
        batch_size += 1

        if batch_size >= 50:
            PrivateThreadMember.objects.bulk_create(batch)
            batch = []
            batch_size = 0

    if batch_size:
        PrivateThreadMember.objects.bulk_create(batch)


class Migration(migrations.Migration):

    atomic = False

    dependencies = [
        ("misago_privatethreads", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(
            migrate_private_thread_members,
            migrations.RunPython.noop,
        ),
    ]
