# Generated by Django 4.2.7 on 2023-12-21 21:10

from django.db import migrations

from ...permissions.permissionsid import get_permissions_id
from ..enums import DefaultGroupId


def pgettext(context: str, message: str):
    return message


def create_default_groups(apps, schema_editor):
    Group = apps.get_model("misago_users", "Group")
    Group.objects.bulk_create(
        [
            Group(
                id=DefaultGroupId.ADMINS,
                name=pgettext("default user group", "Administrators"),
                slug="administrators",
                ordering=0,
                is_admin=True,
                is_moderator=True,
            ),
            Group(
                id=DefaultGroupId.MODERATORS,
                name=pgettext("default user group", "Moderators"),
                slug="moderators",
                ordering=1,
                is_admin=False,
                is_moderator=True,
            ),
            Group(
                id=DefaultGroupId.MEMBERS,
                name=pgettext("default user group", "Members"),
                slug="members",
                ordering=2,
                is_admin=False,
                is_moderator=False,
            ),
            Group(
                id=DefaultGroupId.GUESTS,
                name=pgettext("default user group", "Guests"),
                slug="guests",
                ordering=3,
                is_admin=False,
                is_moderator=False,
            ),
        ]
    )


def set_users_default_groups(apps, schema_editor):
    User = apps.get_model("misago_users", "User")

    # Put all staff users in admins group
    User.objects.filter(is_staff=True).update(
        group_id=DefaultGroupId.ADMINS,
        groups_ids=[DefaultGroupId.ADMINS],
        permissions_id=get_permissions_id([DefaultGroupId.ADMINS.value]),
    )

    # Put all non-staff users in members group
    User.objects.filter(is_staff=False).update(
        group_id=DefaultGroupId.MEMBERS,
        groups_ids=[DefaultGroupId.MEMBERS],
        permissions_id=get_permissions_id([DefaultGroupId.MEMBERS.value]),
    )


class Migration(migrations.Migration):
    dependencies = [
        ("misago_users", "0027_new_permissions"),
    ]

    operations = [
        migrations.RunPython(
            create_default_groups,
            migrations.RunPython.noop,
        ),
        migrations.RunPython(
            set_users_default_groups,
            migrations.RunPython.noop,
        ),
        migrations.RunSQL(
            "ALTER SEQUENCE misago_users_group_id_seq RESTART WITH 100;",
            migrations.RunSQL.noop,
        ),
    ]
